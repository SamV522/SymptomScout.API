// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SymptomScout.API.Persistence;

#nullable disable

namespace SymptomScout.API.Migrations
{
    [DbContext(typeof(SymptomScoutDbContext))]
    [Migration("20230624171028_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiagnosisSymptom", b =>
                {
                    b.Property<int>("DiagnosesDiagnosisId")
                        .HasColumnType("int");

                    b.Property<int>("SymptomsSymptomId")
                        .HasColumnType("int");

                    b.HasKey("DiagnosesDiagnosisId", "SymptomsSymptomId");

                    b.HasIndex("SymptomsSymptomId");

                    b.ToTable("DiagnosisSymptom");
                });

            modelBuilder.Entity("SymptomScout.Shared.Domain.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagnosisId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DiagnosisId");

                    b.HasIndex(new[] { "Name" }, "UC_Diagnosis__Name")
                        .IsUnique();

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("SymptomScout.Shared.Domain.Symptom", b =>
                {
                    b.Property<int>("SymptomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SymptomId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SymptomId");

                    b.HasIndex(new[] { "Name" }, "UC_Symptom_Name")
                        .IsUnique();

                    b.ToTable("Symptoms");
                });

            modelBuilder.Entity("DiagnosisSymptom", b =>
                {
                    b.HasOne("SymptomScout.Shared.Domain.Diagnosis", null)
                        .WithMany()
                        .HasForeignKey("DiagnosesDiagnosisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SymptomScout.Shared.Domain.Symptom", null)
                        .WithMany()
                        .HasForeignKey("SymptomsSymptomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
